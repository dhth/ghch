name: deploy-on-vercel

inputs:
  environment:
    description: 'Environment'
    required: true
  vercel_org_id:
    description: 'Vercel org ID'
    required: true
  vercel_project_id:
    description: 'Vercel project ID'
    required: true
  vercel_token:
    description: 'Vercel token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Vercel CLI
      shell: bash
      run: npm install --global vercel@latest
    - name: Pull Vercel Environment Information
      shell: bash
      env:
        VERCEL_ORG_ID: ${{ inputs.vercel_org_id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel_project_id }}
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
    - name: Set up Gleam
      uses: erlef/setup-beam@v1
      with:
        otp-version: "27.0"
        gleam-version: "1.10.0"
        rebar3-version: "3"
    - name: Build app
      shell: bash
      run: |
        cd src/server/client
        gleam deps download
        sed -i 's|pub const public = False|pub const public = True|' src/ghx/constants.gleam
        gleam run -m lustre/dev build app --minify
    - name: Copy output to dist
      shell: bash
      run: |
        mkdir -p dist
        cp src/server/client/index.html dist
        cp -r src/server/client/priv dist
    - name: Update path in index.html to use minified app
      shell: bash
      run: |
        sed -i 's|priv/static/ghx.mjs|priv/static/ghx.min.mjs|' dist/index.html
        sed -i 's|priv/static/ghx.css|priv/static/ghx.min.css|' dist/index.html
    - name: Deploy Project Artifacts to Vercel
      shell: bash
      env:
        VERCEL_ORG_ID: ${{ inputs.vercel_org_id }}
        VERCEL_PROJECT_ID: ${{ inputs.vercel_project_id }}
      run: vercel deploy dist --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
